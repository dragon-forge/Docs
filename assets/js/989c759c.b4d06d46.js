"use strict";(self.webpackChunkhammeranims=self.webpackChunkhammeranims||[]).push([[9611],{1381:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var i=e(5893),r=e(1151);const a={sidebar_position:0},o="\ud83d\udd8c\ufe0f Part Tinting",s={id:"api/hammermultipart/advanced/tint",title:"\ud83d\udd8c\ufe0f Part Tinting",description:"When displaying models of a part, you might find yourself needing to add a tint to your model. You can do that with HammerMultipart.",source:"@site/docs/api/hammermultipart/advanced/tint.md",sourceDirName:"api/hammermultipart/advanced",slug:"/api/hammermultipart/advanced/tint",permalink:"/docs/api/hammermultipart/advanced/tint",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"apiSidebar",previous:{title:"\ud83e\udde0 Advanced",permalink:"/docs/category/-advanced-1"},next:{title:"TerrariaCraft",permalink:"/docs/category/terrariacraft"}},d={},l=[{value:"\ud83e\udeaa PartDefinition",id:"-partdefinition",level:2},{value:"\ud83d\udc27 PartEntity",id:"-partentity",level:2},{value:"\ud83e\ude84 JSON Tinting",id:"-json-tinting",level:2}];function c(n){const t={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"\ufe0f-part-tinting",children:"\ud83d\udd8c\ufe0f Part Tinting"}),"\n",(0,i.jsx)(t.p,{children:"When displaying models of a part, you might find yourself needing to add a tint to your model. You can do that with HammerMultipart."}),"\n",(0,i.jsx)(t.h2,{id:"-partdefinition",children:"\ud83e\udeaa PartDefinition"}),"\n",(0,i.jsx)(t.p,{children:'First things first, you must define that your part may have a few "tint slots".'}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["Tint slots ",(0,i.jsx)(t.strong,{children:"are not"})," the same as indices, and are dynamically assigned when the ",(0,i.jsx)(t.code,{children:"PartEntity"})," is placed into a container.\r\nPlease do keep that in mind when you read ",(0,i.jsx)(t.strong,{children:"tint slot"}),"."]})}),"\n",(0,i.jsxs)(t.p,{children:["To allocate N amount of tint slots, inside your part definition's constructor assign the ",(0,i.jsx)(t.code,{children:"tintIndexCount"})," to the number of slots you wish to reserve.\r\nYou don't have to use them all but it is strongly advised against wasting said tint slots to keep memory usage lower."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"public class YourPartDefinition extends PartDefinition\r\n{\r\n    public YourPartDefinition()\r\n    {\r\n        this.tintIndexCount = 1;\r\n        ...\n"})}),"\n",(0,i.jsx)(t.h2,{id:"-partentity",children:"\ud83d\udc27 PartEntity"}),"\n",(0,i.jsxs)(t.p,{children:["Now when ",(0,i.jsx)(t.code,{children:"PartEntity"})," is going to be created, you will now have access to multiple tint indices through ",(0,i.jsx)(t.code,{children:"PartEntity.getTintIndices()"})," (returns ",(0,i.jsx)(t.code,{children:"int[]"}),") method."]}),"\n",(0,i.jsx)(t.p,{children:"This array is basically a mapping to get tint slot by tint index."}),"\n",(0,i.jsxs)(t.p,{children:["Overriding ",(0,i.jsx)(t.code,{children:"getTintLayerColor"})," is what actually lets us alter colors."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:"public class YourPartEntity extends PartEntity\r\n{\r\n    public YourPartEntity(PartDefinition definition, PartContainer container, PartPlacement placement)\r\n    {\r\n        super(definition, container, placement);\r\n    }\r\n\r\n    @Override\r\n    public int getTintLayerColor(int tintLayer)\r\n    {\r\n        int[] tintIndices = getTintIndices();\r\n        if(tintLayer == tintIndices[0]) return 0xFF2222;\r\n        return 0xFFFFFF;\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"In this example we transform the tint index 0 on our model into the whatever tint slot the container will have."}),"\n",(0,i.jsx)(t.p,{children:"Speaking of models, how do tint indices get added?"}),"\n",(0,i.jsx)(t.h2,{id:"-json-tinting",children:"\ud83e\ude84 JSON Tinting"}),"\n",(0,i.jsx)(t.p,{children:'When making a JSON model (in BlockBench, for example), you may set a "tintindex" property.\r\nIn our example, we are using tint index 0. In a model it would look something like this:'}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\r\n    "parent": "minecraft:block/block",\r\n    "render_type": "cutout",\r\n    "textures": {\r\n        "particle": "yourmod:part/your_part"\r\n    },\r\n    "elements": [\r\n        {\r\n            "name": "w",\r\n            "from": [7, 0, 7],\r\n            "to": [9, 3, 9],\r\n            "rotation": {"angle": 0, "axis": "x", "origin": [8, 2.125, 4.25]},\r\n            "faces": {\r\n                "up": {"uv": [7, 7, 9, 9], "texture": "#particle", "tintindex": 0}\r\n            }\r\n        }\r\n    ]\r\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["See the ",(0,i.jsx)(t.code,{children:'"tintindex": 0'}),"? That's exactly what makes it tick.\r\nWhever a quad has a tint index, it will be transformed into ",(0,i.jsx)(t.em,{children:"tint slot"})," by HammerMultipart.\r\nYou then need to handle the given tint slot, which is exactly what we are doing inside of ",(0,i.jsx)(t.code,{children:"getTintLayerColor"})," method. Transforming ",(0,i.jsx)(t.code,{children:"tintindex"})," 0 into a red color."]})]})}function h(n={}){const{wrapper:t}={...(0,r.a)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},1151:(n,t,e)=>{e.d(t,{Z:()=>s,a:()=>o});var i=e(7294);const r={},a=i.createContext(r);function o(n){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),i.createElement(a.Provider,{value:t},n.children)}}}]);