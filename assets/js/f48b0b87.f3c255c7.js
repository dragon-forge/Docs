"use strict";(self.webpackChunkhammeranims=self.webpackChunkhammeranims||[]).push([[3082],{8193:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var n=t(5893),r=t(1151);const s={sidebar_position:2},o="Recipe Registration",a={id:"hammerlib/hlbasics/recipe_registration",title:"Recipe Registration",description:"Let's take a look at registering recipes through HammerLib.",source:"@site/docs/hammerlib/hlbasics/recipe_registration.md",sourceDirName:"hammerlib/hlbasics",slug:"/hammerlib/hlbasics/recipe_registration",permalink:"/docs/hammerlib/hlbasics/recipe_registration",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Legacy .lang files",permalink:"/docs/hammerlib/hlbasics/legacy_langs"},next:{title:"Tags Registration",permalink:"/docs/hammerlib/hlbasics/tags_registration"}},c={},p=[{value:"The process",id:"the-process",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"recipe-registration",children:"Recipe Registration"}),"\n",(0,n.jsx)(i.p,{children:"Let's take a look at registering recipes through HammerLib."}),"\n",(0,n.jsx)(i.p,{children:"Minecraft provides a datapack way of adding recipes through JSON.\nHowever, it is quite annoying to work with, having each recipe its own file, and having to also guess all variables unless you have a template recipe to look at."}),"\n",(0,n.jsx)(i.p,{children:"This is where HammerLib shines: it allows developers to register recipes, at runtime (meaning you can take configs into consideration), of any type through code!"}),"\n",(0,n.jsx)(i.h2,{id:"the-process",children:"The process"}),"\n",(0,n.jsxs)(i.p,{children:["Create a class, and make it implement ",(0,n.jsx)(i.code,{children:"IRecipeProvider"})," from ",(0,n.jsx)(i.code,{children:"org.zeith.hammerlib.api.IRecipeProvider"}),".\nAnnotate your interface with ",(0,n.jsx)(i.code,{children:"@ProvideRecipes"})," from ",(0,n.jsx)(i.code,{children:"org.zeith.hammerlib.annotations.ProvideRecipes"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["Now you have to implement ",(0,n.jsx)(i.code,{children:"provideRecipes"})," method."]}),"\n",(0,n.jsx)(i.p,{children:"The result should look something like this:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:'package com.yourname.yourmod.init;\n\nimport net.minecraft.world.item.Items;\nimport net.minecraftforge.common.Tags;\nimport org.zeith.hammerlib.annotations.*;\nimport org.zeith.hammerlib.api.IRecipeProvider;\nimport org.zeith.hammerlib.event.recipe.RegisterRecipesEvent;\n\n@ProvideRecipes\npublic class ModRecipes\n\t\timplements IRecipeProvider\n{\n\t@Override\n\tpublic void provideRecipes(RegisterRecipesEvent event)\n\t{\n\t\t// TODO: Register recipes!\n\n\t\tevent.shaped() // here\'s an example of adding a recipe!\n\t\t\t\t.result(Items.CHAINMAIL_CHESTPLATE)\n\t\t\t\t.shape("n n", "nnn", "nnn")\n\t\t\t\t.map(\'n\', Tags.Items.NUGGETS_IRON)\n\t\t\t\t.register();\n\t}\n}\n'})}),"\n",(0,n.jsx)(i.p,{children:"That's pretty much it!\nThe recipes can be turned off by modpack developers through configs."}),"\n",(0,n.jsxs)(i.p,{children:["You may add custom modded recipe types using ",(0,n.jsx)(i.code,{children:"event.add(Recipe)"})," method."]})]})}function d(e={}){const{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>a,a:()=>o});var n=t(7294);const r={},s=n.createContext(r);function o(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);