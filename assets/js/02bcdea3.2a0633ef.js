"use strict";(self.webpackChunkhammeranims=self.webpackChunkhammeranims||[]).push([[2074],{4720:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>l});var r=n(5893),a=n(1151);const t={sidebar_position:0},s="\ud83d\udcdd Registration",o={id:"api/hammeranims/particles/registration",title:"\ud83d\udcdd Registration",description:"In this page we're going to see how particles are stored, registered and accessed.",source:"@site/docs/api/hammeranims/particles/registration.md",sourceDirName:"api/hammeranims/particles",slug:"/api/hammeranims/particles/registration",permalink:"/docs/api/hammeranims/particles/registration",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"apiSidebar",previous:{title:"\u2728 Particles",permalink:"/docs/category/-particles"},next:{title:"\u2728 Spawning particles",permalink:"/docs/api/hammeranims/particles/spawning"}},c={},l=[{value:"\ud83e\udea3 Particle storage",id:"-particle-storage",level:2},{value:"\u2615 Registration (Java)",id:"-registration-java",level:2},{value:"\u2328\ufe0f ModParticles Class",id:"\ufe0f-modparticles-class",level:3},{value:"\ud83d\udce6 Adding containers",id:"-adding-containers",level:3},{value:"\ud83d\udd03 Resource loading",id:"-resource-loading",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"-registration",children:"\ud83d\udcdd Registration"}),"\n",(0,r.jsx)(i.p,{children:"In this page we're going to see how particles are stored, registered and accessed."}),"\n",(0,r.jsx)(i.h2,{id:"-particle-storage",children:"\ud83e\udea3 Particle storage"}),"\n",(0,r.jsxs)(i.p,{children:["As usual, particles are stored in container files (usually with ",(0,r.jsx)(i.code,{children:".particle.json"})," suffix)\nEach container may have only one effect stored inside."]}),"\n",(0,r.jsx)(i.p,{children:"To register a given particle container into the game, HammerAnimation provides a separate registry."}),"\n",(0,r.jsxs)(i.p,{children:["Each element of said registry is an instance of ",(0,r.jsx)(i.code,{children:"org.zeith.hammeranims.api.particles.IParticleContainer"}),"."]}),"\n",(0,r.jsxs)(i.admonition,{type:"tip",children:[(0,r.jsxs)(i.p,{children:["HammerLib already provides us with a simple content registration pipeline (see ",(0,r.jsx)(i.a,{href:"/docs/api/hammerlib/basics/content_registration",children:(0,r.jsx)(i.code,{children:"\ud83d\udcdd Content Registration"})}),")"]}),(0,r.jsx)(i.p,{children:"This is what we're going to use to get particles registered properly and easily."})]}),"\n",(0,r.jsx)(i.p,{children:"Additionally, there is resource-driven (not data-driven!) way of loading additional particles without explicitly registering them, but this is advised to be kept for resource pack makers only."}),"\n",(0,r.jsx)(i.h2,{id:"-registration-java",children:"\u2615 Registration (Java)"}),"\n",(0,r.jsx)(i.h3,{id:"\ufe0f-modparticles-class",children:"\u2328\ufe0f ModParticles Class"}),"\n",(0,r.jsxs)(i.p,{children:["To store our particle containers, create an interface ",(0,r.jsx)(i.code,{children:"ModParticles"})," inside your init package."]}),"\n",(0,r.jsx)(i.p,{children:"The result should look something like this:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-java",children:"package com.yourname.yourmod.init;\n\nimport org.zeith.hammerlib.annotations.*;\n\n@SimplyRegister\npublic interface ModParticles\n{\n}\n"})}),"\n",(0,r.jsx)(i.h3,{id:"-adding-containers",children:"\ud83d\udce6 Adding containers"}),"\n",(0,r.jsxs)(i.p,{children:["To add a new particle container into the mod, simply create a new field inside ",(0,r.jsx)(i.code,{children:"ModParticles"})," containing the return value of ",(0,r.jsx)(i.code,{children:"IParticleContainer.create()"}),", and annotating the field with ",(0,r.jsx)(i.code,{children:'@RegistryName("name")'}),'. The "name" must be unique.']}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-java",children:'package com.yourname.yourmod.init;\n\nimport org.zeith.hammeranims.api.particles.*;\nimport org.zeith.hammerlib.annotations.*;\n\n@SimplyRegister\npublic interface ModParticles\n{\n    @RegistryName("your_particle")\n    IParticleContainer YOUR_MODEL = IParticleContainer.create();\n}\n'})}),"\n",(0,r.jsx)(i.h2,{id:"-resource-loading",children:"\ud83d\udd03 Resource loading"}),"\n",(0,r.jsx)(i.p,{children:"To make the particles actually load, you need to put the effect files into your mod's resources."}),"\n",(0,r.jsxs)(i.p,{children:["They are generally stored in ",(0,r.jsx)(i.code,{children:"/assets/yourmod/bedrock/particles/"})," folder."]}),"\n",(0,r.jsxs)(i.p,{children:["Thus, the particle effect from our example should be located at ",(0,r.jsx)(i.code,{children:"/assets/yourmod/bedrock/particles/your_particle.particle.json"}),"."]}),"\n",(0,r.jsx)(i.admonition,{type:"tip",children:(0,r.jsxs)(i.p,{children:["If you want to simplify the ",(0,r.jsx)(i.code,{children:".particle.json"})," suffix to just ",(0,r.jsx)(i.code,{children:".json"}),", replace ",(0,r.jsx)(i.code,{children:"IParticleContainer.create()"})," call with ",(0,r.jsx)(i.code,{children:"IParticleContainer.createNoSuffix()"})]})})]})}function p(e={}){const{wrapper:i}={...(0,a.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,i,n)=>{n.d(i,{Z:()=>o,a:()=>s});var r=n(7294);const a={},t=r.createContext(a);function s(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);