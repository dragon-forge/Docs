"use strict";(self.webpackChunkhammeranims=self.webpackChunkhammeranims||[]).push([[3220],{5541:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var n=r(5893),o=r(1151),i=r(9395);const s={sidebar_position:0,title:"\u2601\ufe0f Getting Started"},a="Getting Started",d={id:"api/hammermultipart/intro",title:"\u2601\ufe0f Getting Started",description:"The introduction to adding HammerMultipart to your workspace.",source:"@site/docs/api/hammermultipart/intro.md",sourceDirName:"api/hammermultipart",slug:"/api/hammermultipart/intro",permalink:"/docs/api/hammermultipart/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,title:"\u2601\ufe0f Getting Started"},sidebar:"apiSidebar",previous:{title:"HammerMultipart",permalink:"/docs/category/hammermultipart"},next:{title:"\ud83d\udce6 Essential Knowledge",permalink:"/docs/category/-essential-knowledge"}},l={},c=[{value:"Prerequisites!",id:"prerequisites",level:2},{value:"\ud83e\udd8a 1.21 and Above",id:"-121-and-above",level:2},{value:"\ud83e\udd8a neoforge.mods.toml",id:"-neoforgemodstoml",level:3},{value:"\ud83d\udd28 1.20.1",id:"-1201",level:2}];function m(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://assets.zeith.org/logos/hammer-multipart.png",alt:"The introduction to adding HammerMultipart to your workspace."})}),"\n",(0,n.jsx)(t.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,n.jsx)(t.admonition,{title:"Warning!",type:"danger",children:(0,n.jsx)(t.p,{children:"This documentation describes HammerMultipart 1.20.1 and newer."})}),"\n",(0,n.jsx)(t.p,{children:"With that being said..."}),"\n",(0,n.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites!"}),"\n",(0,n.jsx)(t.h2,{id:"-121-and-above",children:"\ud83e\udd8a 1.21 and Above"}),"\n",(0,n.jsxs)(t.p,{children:["Firstly, add my repository to your workspace.\nThe ",(0,n.jsx)(t.code,{children:"repositories"})," block should already be present in your ",(0,n.jsx)(t.code,{children:"build.gradle"})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-gradle",children:'repositories {\n    maven {\n        name = "Zeitheron Maven"\n        url = "https://maven.zeith.org/"\n        content {\n            includeGroupByRegex "org\\\\.zeith.*"\n        }\n    }\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["After adding the repository, navigate to ",(0,n.jsx)(t.code,{children:"dependencies"})," closure.\nIn here you are going to add two dependencies:"]}),"\n",(0,n.jsx)(i.ZP,{modrinthId:"9g6WlH2N",children:(0,n.jsx)(i.ZP,{modrinthId:"PlkSuVtM",mcVersion:(0,i.dv)("9g6WlH2N"),versionNotation:"%HLVERSION%",mcNotation:"%HLMCVERSION%",children:(0,n.jsxs)(i.ZP,{modrinthId:"61kgjt4z",mcVersion:(0,i.dv)("9g6WlH2N"),versionNotation:"%MBVERSION%",mcNotation:"%MBMCVERSION%",children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-gradle",children:'dependencies {\n    implementation "org.zeith.hammerlib:HammerLib-%HLMCVERSION%:%HLVERSION%"\n    implementation "org.zeith.multipart:HammerMultipart-%MCVERSION%:%VERSION%"\n    implementation "org.zeith.multipart:HammerMicroblocks-%MBMCVERSION%:%MBVERSION%" // Useful for testing multipart with microblocks.\n}\n'})}),(0,n.jsx)(t.p,{children:(0,n.jsxs)(t.strong,{children:["Make sure to replace the ",(0,n.jsx)(t.code,{children:"%MCVERSION%"})," with your game version, ",(0,n.jsx)(t.code,{children:"%HLVERSION%"})," with latest HammerLib version for given version, and ",(0,n.jsx)(t.code,{children:"%VERSION%"})," with the latest HammerMultipart version and ",(0,n.jsx)(t.code,{children:"%MBVERSION%"})," with the latest HammerMicroblocks version."]})}),(0,n.jsx)(t.p,{children:"After this, refresh your project in IDE of your choice."}),(0,n.jsx)(t.p,{children:"You should see HammerLib and HammerMultipart appear in your classpath."}),(0,n.jsx)(t.h3,{id:"-neoforgemodstoml",children:"\ud83e\udd8a neoforge.mods.toml"}),(0,n.jsxs)(t.p,{children:["Add this piece of code to your ",(0,n.jsx)(t.code,{children:"neoforge.mods.toml"}),":"]}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-toml",children:'[[dependencies.mod_id]]\n    modId="hammermultipart"\n    mandatory=true\n    versionRange="[%VERSION%,)"\n    ordering="NONE"\n    side="BOTH"\n'})}),(0,n.jsx)(t.p,{children:"After this, refresh your project in IDE of your choice."}),(0,n.jsx)(t.p,{children:"You should see HammerLib and HammerMultipart appear in your classpath."}),(0,n.jsxs)(t.p,{children:["Be sure to replace the ",(0,n.jsx)(t.code,{children:"%VERSION%"})," with the actual minimal version you require to run your mod."]})]})})}),"\n",(0,n.jsx)(t.h2,{id:"-1201",children:"\ud83d\udd28 1.20.1"}),"\n",(0,n.jsxs)(t.p,{children:["Firstly, add my repository to your workspace.\nThe ",(0,n.jsx)(t.code,{children:"repositories"})," block should already be present in your ",(0,n.jsx)(t.code,{children:"build.gradle"})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-gradle",children:'repositories {\n    maven {\n        name = "Zeitheron Maven"\n        url = "https://maven.zeith.org/"\n        content {\n            includeGroupByRegex "org\\\\.zeith.*"\n        }\n    }\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["After adding the repository, navigate to ",(0,n.jsx)(t.code,{children:"dependencies"})," closure.\nIn here you are going to add two dependencies:"]}),"\n",(0,n.jsx)(i.ZP,{modrinthId:"9g6WlH2N",mcVersion:"1.20.1",children:(0,n.jsx)(i.ZP,{modrinthId:"PlkSuVtM",mcVersion:"1.20.1",versionNotation:"%HLVERSION%",mcNotation:"%HLMCVERSION%",children:(0,n.jsxs)(i.ZP,{modrinthId:"61kgjt4z",mcVersion:"1.20.1",versionNotation:"%MBVERSION%",mcNotation:"%MBMCVERSION%",children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-gradle",children:'dependencies {\n    implementation fg.deobf("org.zeith.hammerlib:HammerLib-%HLMCVERSION%:%HLVERSION%")\n    implementation fg.deobf("org.zeith.multipart:HammerMultipart-%MCVERSION%:%VERSION%")\n    implementation fg.deobf("org.zeith.multipart:HammerMicroblocks-%MBMCVERSION%:%MBVERSION%") // Useful for testing multipart with microblocks.\n}\n'})}),(0,n.jsx)(t.p,{children:(0,n.jsxs)(t.strong,{children:["Make sure to replace the ",(0,n.jsx)(t.code,{children:"%MCVERSION%"})," with your game version, ",(0,n.jsx)(t.code,{children:"%HLVERSION%"})," with latest HammerLib version for given version, and ",(0,n.jsx)(t.code,{children:"%VERSION%"})," with the latest HammerMultipart version and ",(0,n.jsx)(t.code,{children:"%MBVERSION%"})," with the latest HammerMicroblocks version."]})})]})})})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},9395:(e,t,r)=>{r.d(t,{ZP:()=>c,dv:()=>l});var n=r(7066),o=r(7294),i=r(5893);const s="1.21";function a(e,t){return parseFloat(e.substring(2))-parseFloat(t.substring(2))}function d(e,t,r){if(e=e||{},!t){const r=Object.keys(e).filter((e=>e.endsWith("-latest"))).map((e=>e.substring(0,e.lastIndexOf("-")))).sort(a);t=r[r.length-1]}return{mc:t,ver:e[`${t}-latest`]||r||"[UNKNOWN]"}}function l(e){const[t,r]=(0,o.useState)();return(0,o.useEffect)((()=>{const t=`modrinth-cache-${e}`;let o=localStorage.getItem(t);o&&(o=JSON.parse(o));const i=Date.now()/1e3;if(o?.promos&&o?.lastRefresh&&i-o.lastRefresh<300){const e=o.promos;r(d(e)?.mc||s)}else n.Z.get(`https://api.modrinth.com/updates/${e}/forge_updates.json?neoforge=include`).then((e=>{const n=e.data?.promos;localStorage.setItem(t,JSON.stringify({lastRefresh:parseInt(Date.now()/1e3),promos:n})),r(d(n)?.mc||s)})).catch((e=>console.log(e)))}),[e]),t}function c(e){let{children:t,modrinthId:r,mcVersion:a,fbVersion:l,versionNotation:c,mcNotation:m}=e;const[h,p]=(0,o.useState)({mc:a,ver:l});c=c||"%VERSION%",m=m||"%MCVERSION%",(0,o.useEffect)((()=>{const e=`modrinth-cache-${r}`;let t=localStorage.getItem(e);t&&(t=JSON.parse(t));const o=Date.now()/1e3;if(t?.promos&&t?.lastRefresh&&o-t.lastRefresh<300){const e=t.promos;p(d(e,a,l))}else{const o=t?.promos;o&&p(d(o,a,l)),n.Z.get(`https://api.modrinth.com/updates/${r}/forge_updates.json?neoforge=include`).then((t=>{const r=t.data?.promos;localStorage.setItem(e,JSON.stringify({lastRefresh:parseInt(Date.now()/1e3),promos:r})),p(d(r,a,l))})).catch((e=>console.log(e)))}}),[r,a]);const u=h?.ver||(a?a.substring(2)+".1":"0.0.0");if(!t)return u;const g=e=>o.Children.map(e,(e=>"string"==typeof e?e.replaceAll(c,u).replaceAll(m,h?.mc||s):o.isValidElement(e)?o.cloneElement(e,{...e.props,children:g(e.props.children)}):e));return(0,i.jsx)(i.Fragment,{children:g(t)})}}}]);