"use strict";(self.webpackChunkhammeranims=self.webpackChunkhammeranims||[]).push([[2474],{3496:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>t,metadata:()=>s,toc:()=>c});var a=e(5893),o=e(1151);const t={sidebar_position:1},r="\ud83d\udcdd Registration",s={id:"api/hammeranims/animations/registration",title:"\ud83d\udcdd Registration",description:"In this page we're going to see how animations are stored, registered and accessed.",source:"@site/docs/api/hammeranims/animations/registration.md",sourceDirName:"api/hammeranims/animations",slug:"/api/hammeranims/animations/registration",permalink:"/docs/api/hammeranims/animations/registration",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"apiSidebar",previous:{title:"\ud83c\udf43 Animations",permalink:"/docs/category/-animations"},next:{title:"\ud83d\udc83 Animation Systems",permalink:"/docs/api/hammeranims/animations/animation_system"}},d={},c=[{value:"\ud83e\udea3 Animation storage",id:"-animation-storage",level:2},{value:"\u2615 Registration (Java)",id:"-registration-java",level:2},{value:"\u2328\ufe0f ModAnimations Class",id:"\ufe0f-modanimations-class",level:3},{value:"\ud83d\udce6 Adding containers",id:"-adding-containers",level:3},{value:"\ud83d\udd03 Resource loading",id:"-resource-loading",level:2},{value:"\ud83d\udce4 Getting animations from container",id:"-getting-animations-from-container",level:2},{value:"\ud83d\uddfa\ufe0f AnimationLocation",id:"\ufe0f-animationlocation",level:2}];function m(n){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h1,{id:"-registration",children:"\ud83d\udcdd Registration"}),"\n",(0,a.jsx)(i.p,{children:"In this page we're going to see how animations are stored, registered and accessed."}),"\n",(0,a.jsx)(i.h2,{id:"-animation-storage",children:"\ud83e\udea3 Animation storage"}),"\n",(0,a.jsxs)(i.p,{children:["Bedrock animations are stored in animation container files (usually with ",(0,a.jsx)(i.code,{children:".animation.json"})," suffix)\nEach container may have one or more animations stored inside them. Said animations are what HammerAnimation uses to animate geometries."]}),"\n",(0,a.jsx)(i.p,{children:"To register a given animation container into the game, HammerAnimation provides a separate registry."}),"\n",(0,a.jsxs)(i.p,{children:["Each element of said registry is an instance of ",(0,a.jsx)(i.code,{children:"org.zeith.hammeranims.api.animation.IAnimationContainer"}),"."]}),"\n",(0,a.jsxs)(i.admonition,{type:"tip",children:[(0,a.jsxs)(i.p,{children:["HammerLib already provides us with a simple content registration pipeline (see ",(0,a.jsx)(i.a,{href:"/docs/api/hammerlib/basics/content_registration",children:(0,a.jsx)(i.code,{children:"\ud83d\udcdd Content Registration"})}),")"]}),(0,a.jsx)(i.p,{children:"This is what we're going to use to get animations registered properly and easily."})]}),"\n",(0,a.jsx)(i.h2,{id:"-registration-java",children:"\u2615 Registration (Java)"}),"\n",(0,a.jsx)(i.h3,{id:"\ufe0f-modanimations-class",children:"\u2328\ufe0f ModAnimations Class"}),"\n",(0,a.jsxs)(i.p,{children:["To store our animation containers, create an interface ",(0,a.jsx)(i.code,{children:"ModAnimations"})," inside your init package."]}),"\n",(0,a.jsx)(i.p,{children:"The result should look something like this:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-java",children:"package com.yourname.yourmod.init;\n\nimport org.zeith.hammerlib.annotations.*;\n\n@SimplyRegister\npublic interface ModAnimations\n{\n}\n"})}),"\n",(0,a.jsx)(i.h3,{id:"-adding-containers",children:"\ud83d\udce6 Adding containers"}),"\n",(0,a.jsxs)(i.p,{children:["To add a new animation container into the mod, simply create a new field inside ",(0,a.jsx)(i.code,{children:"ModAnimations"})," containing the return value of ",(0,a.jsx)(i.code,{children:"IAnimationContainer.create()"}),", and annotating the field with ",(0,a.jsx)(i.code,{children:'@RegistryName("name")'}),'. The "name" must be unique.']}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-java",children:'package com.yourname.yourmod.init;\n\nimport org.zeith.hammeranims.api.animation.*;\nimport org.zeith.hammerlib.annotations.*;\n\n@SimplyRegister\npublic interface ModAnimations\n{\n    @RegistryName("your_animation")\n    IAnimationContainer YOUR_ANIMATION = IAnimationContainer.create();\n}\n'})}),"\n",(0,a.jsx)(i.h2,{id:"-resource-loading",children:"\ud83d\udd03 Resource loading"}),"\n",(0,a.jsx)(i.p,{children:"To make the animation actually load, you need to put the animation into your mod's resources."}),"\n",(0,a.jsxs)(i.p,{children:["They are generally stored in ",(0,a.jsx)(i.code,{children:"/assets/yourmod/bedrock/animations/"})," folder."]}),"\n",(0,a.jsxs)(i.p,{children:["Thus, the animation from our example should be located at ",(0,a.jsx)(i.code,{children:"/assets/yourmod/bedrock/animations/your_animation.animation.json"}),"."]}),"\n",(0,a.jsx)(i.admonition,{type:"tip",children:(0,a.jsxs)(i.p,{children:["If you want to simplify the ",(0,a.jsx)(i.code,{children:".animation.json"})," suffix to just ",(0,a.jsx)(i.code,{children:".json"}),", replace ",(0,a.jsx)(i.code,{children:"IAnimationContainer.create()"})," call with ",(0,a.jsx)(i.code,{children:"IAnimationContainer.createNoSuffix()"})]})}),"\n",(0,a.jsx)(i.h2,{id:"-getting-animations-from-container",children:"\ud83d\udce4 Getting animations from container"}),"\n",(0,a.jsx)(i.p,{children:"Your animation container is now loaded into the game.\nQuestion is, how do you get the animation out of the container?"}),"\n",(0,a.jsxs)(i.p,{children:["It's surprisingly simple, actually.\nAfter creating the animation container inside our interface, we may then use the container as ",(0,a.jsx)(i.code,{children:"IAnimationSource"})," directly and send it into the ",(0,a.jsx)(i.code,{children:"AnimationSystem"})," or what have you.\nThis, however, is going to work ONLY IF the animation container has EXACTLY ONE (1) animation inside the container."]}),"\n",(0,a.jsxs)(i.p,{children:["For multiple animations per container, ",(0,a.jsx)(i.code,{children:"AnimationHolder"})," would come in handy.\nWe could make one by calling ",(0,a.jsx)(i.code,{children:'YOUR_ANIMATION.holder("anim")'})," and store its result in a final field. This holder will dynamically retrieve the animation, even after a reload."]}),"\n",(0,a.jsx)(i.p,{children:'Say, our example animation container has animations "idle" and "walk" inside it. We could extract them and store as fields (that we\'re going to be referencing elsewhere):'}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-java",children:'package com.yourname.yourmod.init;\n\nimport org.zeith.hammeranims.api.animation.*;\nimport org.zeith.hammerlib.annotations.*;\n\n@SimplyRegister\npublic interface ModAnimations\n{\n    @RegistryName("your_animation")\n    IAnimationContainer YOUR_ANIMATION = IAnimationContainer.create();\n    \n    AnimationHolder YOUR_ANIMATION_IDLE = YOUR_ANIMATION.holder("idle");\n    AnimationHolder YOUR_ANIMATION_WALK = YOUR_ANIMATION.holder("walk");\n}\n'})}),"\n",(0,a.jsxs)(i.p,{children:["Both ",(0,a.jsx)(i.code,{children:"IAnimationContainer"})," and ",(0,a.jsx)(i.code,{children:"AnimationHolder"})," implement ",(0,a.jsx)(i.code,{children:"IAnimationSource"})," internally, which provides ",(0,a.jsx)(i.code,{children:"ConfiguredAnimation configure()"})," method, as well as ",(0,a.jsx)(i.code,{children:"AnimationLocation getLocation()"}),"."]}),"\n",(0,a.jsx)(i.h2,{id:"\ufe0f-animationlocation",children:"\ud83d\uddfa\ufe0f AnimationLocation"}),"\n",(0,a.jsxs)(i.p,{children:["This class is responsible for pointing to a specific animation inside a container.\nIt's like a ",(0,a.jsx)(i.code,{children:"ModelResourceLocation"}),' inside Minecraft, but instead of pointing to a model variant (ex. "inventory"), our location points to a name inside the container.']}),"\n",(0,a.jsxs)(i.p,{children:["The ",(0,a.jsx)(i.code,{children:"toString()"})," result of calling on ",(0,a.jsx)(i.code,{children:"AnimationLocation"})," from ",(0,a.jsx)(i.code,{children:"ModAnimations.YOUR_ANIMATION_IDLE.getLocation()"})," should be ",(0,a.jsx)(i.code,{children:"yourmod:your_animation!idle"}),"."]}),"\n",(0,a.jsxs)(i.p,{children:["There is also a method of resolving animation from location inside the class, ",(0,a.jsx)(i.code,{children:"Optional<Animation> resolve()"}),".\nIt's going to return an animation if and only if the animation container is registered, and the animation name exists inside the container."]}),"\n",(0,a.jsxs)(i.p,{children:["The returned animation does not change after calling ",(0,a.jsx)(i.code,{children:"/hammeranims reload"}),", so avoid storing its result long-term. Store ",(0,a.jsx)(i.code,{children:"AnimationHolder"})," instead. (where possible)"]})]})}function l(n={}){const{wrapper:i}={...(0,o.a)(),...n.components};return i?(0,a.jsx)(i,{...n,children:(0,a.jsx)(m,{...n})}):m(n)}},1151:(n,i,e)=>{e.d(i,{Z:()=>s,a:()=>r});var a=e(7294);const o={},t=a.createContext(o);function r(n){const i=a.useContext(t);return a.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function s(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),a.createElement(t.Provider,{value:i},n.children)}}}]);